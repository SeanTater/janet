name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.85.0
      with:
        components: rustfmt, clippy

    - name: Install GTK dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "janet-ai-${{ matrix.os }}"
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Setup sccache
      uses: mozilla-actions/sccache-action@v0.0.6

    - name: Configure sccache
      run: |
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
        echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

    - name: Check formatting
      run: cargo fmt --all -- --check
      if: matrix.os == 'ubuntu-latest'

    - name: Run clippy (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run clippy (non-Linux)
      if: matrix.os != 'ubuntu-latest'
      run: cargo clippy --workspace --exclude janet-ai-gtk --all-targets --all-features -- -D warnings

    - name: Build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: cargo build --verbose --all-features

    - name: Build (non-Linux)
      if: matrix.os != 'ubuntu-latest'
      run: cargo build --workspace --exclude janet-ai-gtk --verbose --all-features

    - name: Run tests (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: cargo test --verbose --all-features

    - name: Run tests (non-Linux)
      if: matrix.os != 'ubuntu-latest'
      run: cargo test --workspace --exclude janet-ai-gtk --verbose --all-features

  security-audit:
    name: Security audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.85.0

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "janet-ai-audit"
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Cache cargo-audit binary
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin/cargo-audit
        key: ${{ runner.os }}-cargo-audit-bin
        restore-keys: |
          ${{ runner.os }}-cargo-audit-bin-

    - name: Install cargo-audit
      run: |
        if ! command -v cargo-audit &> /dev/null; then
          cargo install cargo-audit --locked
        else
          echo "cargo-audit already installed, using cached version"
        fi

    - name: Run security audit
      run: cargo audit --ignore RUSTSEC-2023-0071

  workspace-check:
    name: Workspace dependency check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@1.85.0

    - name: Install GTK dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-4-dev

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: "janet-ai-workspace"
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Check workspace dependencies
      run: |
        # Ensure all workspace members build together
        cargo check --workspace --all-features

        # Check that each crate builds independently
        cargo check -p janet-ai-context --all-features
        cargo check -p janet-ai-retriever --all-features
        cargo check -p janet-ai-gtk --all-features

        # Verify CLI tools work
        cargo build --bin janet-ai-context-cli
